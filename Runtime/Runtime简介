Runtime:消息机制 程序启动时，首先加载运行时，是OC的底层
应用场景
1.关联对象
    常出现在分类中，给分类添加属性，更好的解耦。
    如果在分类中定义存储型，需要手动实现 getter & setter 方法
    使用分类动态添加属性的目的，就在于封装的框架，能够更加易用
    让使用者不需要对原有的类进行任何的修改，就能够直接使用框架！
    提示：日常开发，如果要添加属性，仍然需要使用`子类`的方法，因为关联对象的释放周期比较缓慢，会影响性能！
    仿SDWebImage
    objc_getAssociatedObject
    objc_setAssociatedObject
}
2.动态获取类的属性、方法、成员变量、协议数组
    常用于字典转模型
    1.建立NSObject的分类方法
    2.class_copyPropertyList 获取类属性数组
    3.遍历数组  property_getName 获取每个属性的名称 添加到OC的数组
    4.free() 释放
